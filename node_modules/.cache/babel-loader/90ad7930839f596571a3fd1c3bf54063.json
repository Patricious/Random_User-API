{"ast":null,"code":"var _jsxFileName = \"/Users/patriciamulaudzi/Documents/randomuser/src/App.jsx\",\n    _s = $RefreshSig$();\n\nimport './App.css';\nimport { useState, Fragment } from \"react\";\nimport axios from 'axios';\nimport Button from './components/Button';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const [userData, setUserData] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [activeUser, setActiveUser] = useState(false);\n  const [activeLink, setActiveLink] = useState(0);\n\n  const onClickHandler = () => {\n    setLoading(true);\n    axios.get('https://randomuser.me/api/').then(response => {\n      console.log(response.data.results);\n      setUserData(response.data.results);\n    }).catch(error => {\n      console.log(error);\n      setLoading(true);\n    }).finally(() => {\n      setLoading(false);\n      setActiveUser(true);\n    });\n  };\n\n  const icons = ['fas fa-user fa-4x', 'fas fa-envelope fa-4x', 'fas fa-calender-alt fa-4x', 'fas fa-map-marker fa-4x', 'fas fa-phone fa-4x', 'fas fa-lock fa-4x'];\n\n  const PhraseGenerator = ({\n    user\n  }) => {\n    const phrases = [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Hello my name is \", user.name.first, \" \", user.name.first, \"s\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }, this), 'My email address is ${user.email}', 'I was born on  ${user.dob.date.slice(0,10)}', 'I reside in ${user.location.country}', 'My contact number is ${user.phone}', 'My password is ${user.login.password}'];\n    return /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: phrases[activeLink]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }, this);\n  };\n\n  const activeLinkHandler = index => {\n    setActiveLink(index);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \" Random User Generator \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 6\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      isActive: activeUser,\n      clicked: onClickHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 1\n    }, this), loading ? /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"app_user\",\n      children: userData.map((user, index) => {\n        return /*#__PURE__*/_jsxDEV(Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: user.picture.large,\n            alt: \"#\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(PhraseGenerator, {\n            user: user\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"app_icons\",\n            children: icons.map((icon, index) => {\n              return /*#__PURE__*/_jsxDEV(\"i\", {\n                className: icon,\n                onMouseEnter: () => activeLinkHandler(index)\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 74,\n                columnNumber: 1\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 17\n          }, this)]\n        }, user.cell, true, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 17\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"/XqdNg6uN7jSttnhW19Cwoo3Z1U=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/patriciamulaudzi/Documents/randomuser/src/App.jsx"],"names":["useState","Fragment","axios","Button","App","userData","setUserData","loading","setLoading","activeUser","setActiveUser","activeLink","setActiveLink","onClickHandler","get","then","response","console","log","data","results","catch","error","finally","icons","PhraseGenerator","user","phrases","name","first","activeLinkHandler","index","map","picture","large","icon","cell"],"mappings":"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","sourcesContent":["import './App.css';\nimport { useState, Fragment } from \"react\";\nimport axios from 'axios';\nimport Button from './components/Button';\n\nconst App = () => {\n\n\nconst [userData, setUserData] = useState([]);\nconst [loading, setLoading] = useState(false);\nconst [activeUser, setActiveUser] = useState(false);\nconst [activeLink, setActiveLink] = useState(0);\n\nconst onClickHandler = () => {\n    setLoading(true);\n    axios.get('https://randomuser.me/api/')\n        .then((response) => {\n            console.log(response.data.results);\n            setUserData(response.data.results);\n        }).catch((error) => {\n            console.log(error);\n            setLoading(true);\n        }).finally(() => {\n            setLoading(false);\n            setActiveUser(true);\n        })\n\n}\n\nconst icons =[\n    'fas fa-user fa-4x',\n    'fas fa-envelope fa-4x',\n    'fas fa-calender-alt fa-4x',\n    'fas fa-map-marker fa-4x',\n    'fas fa-phone fa-4x',\n    'fas fa-lock fa-4x',\n];\n\nconst PhraseGenerator = ({user})=>{\n    const phrases = [\n        <p>Hello my name is {user.name.first} {user.name.first}s</p>,\n        'My email address is ${user.email}',\n        'I was born on  ${user.dob.date.slice(0,10)}',\n        'I reside in ${user.location.country}',\n        'My contact number is ${user.phone}',\n        'My password is ${user.login.password}',\n    ]\n    return(\n        <h2>{phrases[activeLink]}</h2>\n    )\n}\n\nconst activeLinkHandler = (index)=>{\n    setActiveLink(index);\n}\nreturn ( \n    <div className = \"App\" >\n   \n     <h1 > Random User Generator </h1>\n<Button isActive = { activeUser }\n    clicked = { onClickHandler }/>\n    {loading ? (\n        <h2>Loading...</h2>\n    ):(\n        <div className=\"app_user\">\n        {userData.map((user, index)=>{\n            return (\n                <Fragment key={user.cell}>\n                <img src= {user.picture.large} alt=\"#\"/>\n                <PhraseGenerator user={user} />\n                <div className=\"app_icons\">\n                {icons.map((icon,index)=>{\n                    return(\n<i className={icon} key={index} onMouseEnter={()=> activeLinkHandler(index)}></i>\n                    )\n\n                })}\n                </div>\n                \n                </Fragment>\n            )\n        })}\n\n        </div>\n\n    )}\n   \n</div>\n\n);\n}\n\n\nexport default App;"]},"metadata":{},"sourceType":"module"}