{"version":3,"sources":["components/Button.jsx","App.jsx","index.js"],"names":["Button","isActive","clicked","onClick","App","useState","userData","setUserData","loading","setLoading","activeUser","setActiveUser","activeLink","setActiveLink","icons","PhraseGenerator","user","phrases","name","first","email","dob","date","slice","location","country","phone","login","password","className","axios","get","then","response","console","log","data","results","catch","error","finally","map","index","src","picture","large","alt","icon","onMouseEnter","activeLinkHandler","cell","ReactDOM","render","document","getElementById"],"mappings":"wMAUeA,EARA,SAAC,GAA2B,IAAzBC,EAAwB,EAAxBA,SAAUC,EAAc,EAAdA,QACxB,OAAQ,8BACR,yBAASC,QAAYD,EAArB,cAAkCD,EAAW,mBAAqB,WAAlE,UC0FWG,EAzFH,WAAO,IAAD,EAGcC,mBAAS,IAHvB,mBAGXC,EAHW,KAGDC,EAHC,OAIYF,oBAAS,GAJrB,mBAIXG,EAJW,KAIFC,EAJE,OAKkBJ,oBAAS,GAL3B,mBAKXK,EALW,KAKCC,EALD,OAMkBN,mBAAS,GAN3B,mBAMXO,EANW,KAMCC,EAND,KAwBZC,EAAO,CACT,oBACA,wBACA,wBACA,0BACA,qBACA,qBAGEC,EAAkB,SAAC,GAAU,IAATC,EAAQ,EAARA,KAChBC,EAAU,CACZ,kDAAqBD,EAAKE,KAAKC,MAA/B,IAAuCH,EAAKE,KAAKC,SAChD,sDAAyBH,EAAKI,SAC7B,gDAAmBJ,EAAKK,IAAIC,KAAKC,MAAM,EAAE,OACxC,6CAAgBP,EAAKQ,SAASC,WAC7B,sDAAyBT,EAAKU,SAC9B,+CAAkBV,EAAKW,MAAMC,aAGrC,OACI,6BAAKX,EAAQL,MAOrB,OACI,sBAAKiB,UAAY,MAAjB,UAEC,yDACL,cAAC,EAAD,CAAQ5B,SAAaS,EACjBR,QAhDmB,WACnBO,GAAW,GACXqB,IAAMC,IAAI,8BACLC,MAAK,SAACC,GACHC,QAAQC,IAAIF,EAASG,KAAKC,SAC1B9B,EAAY0B,EAASG,KAAKC,YAC3BC,OAAM,SAACC,GACNL,QAAQC,IAAII,GACZ9B,GAAW,MACZ+B,SAAQ,WACP/B,GAAW,GACXE,GAAc,SAsCrBH,EACG,4CAEA,qBAAKqB,UAAU,WAAf,SACCvB,EAASmC,KAAI,SAACzB,EAAM0B,GACjB,OACI,eAAC,WAAD,WACA,qBAAKC,IAAM3B,EAAK4B,QAAQC,MAAOC,IAAI,MACnC,cAAC/B,EAAD,CAAiBC,KAAMA,IACvB,qBAAKa,UAAU,YAAf,SACCf,EAAM2B,KAAI,SAACM,EAAKL,GACb,OACpB,mBAAGb,UAAWkB,EAAkBC,aAAc,kBArBpB,SAACN,GACvB7B,EAAc6B,GAoBiCO,CAAkBP,KAA5CA,UANM1B,EAAKkC,eC9DpCC,IAASC,OAAQ,cAAE,EAAF,IACbC,SAASC,eAAe,W","file":"static/js/main.205c07f5.chunk.js","sourcesContent":["import React from 'react'\n\nconst Button = ({ isActive, clicked }) => {\n    return (<div>\n    < button onClick = { clicked } > {isActive ? \"Get another user\" : \"Get user\"} < /button>\n    \n    </div> \n    )\n}\n\nexport default Button","import './App.css';\nimport { useState, Fragment } from \"react\";\nimport axios from 'axios';\nimport Button from './components/Button';\n\nconst App = () => {\n\n\nconst [userData, setUserData] = useState([]);\nconst [loading, setLoading] = useState(false);\nconst [activeUser, setActiveUser] = useState(false);\nconst [activeLink, setActiveLink] = useState(0);\n\nconst onClickHandler = () => {\n    setLoading(true);\n    axios.get('https://randomuser.me/api/')\n        .then((response) => {\n            console.log(response.data.results);\n            setUserData(response.data.results);\n        }).catch((error) => {\n            console.log(error);\n            setLoading(true);\n        }).finally(() => {\n            setLoading(false);\n            setActiveUser(true);\n        })\n\n}\n\nconst icons =[\n    'fas fa-user fa-4x',\n    'fas fa-envelope fa-4x',\n    'fas fa-calendar fa-4x',\n    'fas fa-map-marker fa-4x',\n    'fas fa-phone fa-4x',\n    'fas fa-lock fa-4x',\n];\n\nconst PhraseGenerator = ({user})=>{\n    const phrases = [\n        <p>Hello my name is {user.name.first} {user.name.first}</p>,\n         <p>My email address is  {user.email}</p>,\n          <p>I was born on  {user.dob.date.slice(0,10)}</p>,\n           <p>I reside in {user.location.country}</p>,\n            <p>My contact number is {user.phone}</p>,\n            <p>My password is{user.login.password}</p>,\n      \n    ]\n    return(\n        <h2>{phrases[activeLink]}</h2>\n    )\n}\n\nconst activeLinkHandler = (index)=>{\n    setActiveLink(index);\n}\nreturn ( \n    <div className = \"App\" >\n   \n     <h1 > Random User Generator </h1>\n<Button isActive = { activeUser }\n    clicked = { onClickHandler }/>\n    {loading ? (\n        <h2>Loading...</h2>\n    ):(\n        <div className=\"app_user\">\n        {userData.map((user, index)=>{\n            return (\n                <Fragment key={user.cell}>\n                <img src= {user.picture.large} alt=\"#\"/>\n                <PhraseGenerator user={user} />\n                <div className=\"app_icons\">\n                {icons.map((icon,index)=>{\n                    return(\n<i className={icon} key={index} onMouseEnter={()=> activeLinkHandler(index)}></i>\n                    )\n\n                })}\n                </div>\n                \n                </Fragment>\n            )\n        })}\n\n        </div>\n\n    )}\n   \n</div>\n\n);\n}\n\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\n\nReactDOM.render( < App / > ,\n    document.getElementById('root')\n);"],"sourceRoot":""}